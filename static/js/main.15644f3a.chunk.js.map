{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","type","placeholder","onChange","handleChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","console","log","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAceA,EAXF,SAACC,GAAD,OACX,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,YAEN,mCAAML,EAAMG,QAAQG,QACpB,4BAAIN,EAAMG,QAAQI,YCIPC,EAVE,SAACR,GAChB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAClB,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQC,UCLhCO,G,MAAY,SAACX,GAAD,OACvB,uBACEC,UAAU,SACVW,KAAK,OACLC,YAAab,EAAMa,YACnBC,SAAUd,EAAMe,iBCoCLC,E,kDAvCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEf,SAAUc,S,oBAG/C,WAAU,IAAD,SAC2BE,KAAKR,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACZQ,EAAmBjB,EAASkB,QAAO,SAACxB,GAAD,OACvCA,EAAQG,KAAKsB,cAAcC,SAASX,EAAYU,kBAGlD,OACE,sBAAK3B,UAAU,MAAf,UACE,iDAEA,cAAC,EAAD,CACEY,YAAY,kBACZE,aAAc,SAACe,GAAD,OACZ,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,QAAS,WAC7CC,QAAQC,IAAI,EAAKjB,MAAMC,mBAI7B,cAAC,EAAD,CAAUT,SAAUiB,W,GAlCVS,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.15644f3a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nconst Card = (props) => (\r\n  <div className=\"card-container\">\r\n    <img\r\n      src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n      alt=\"monster\"\r\n    />\r\n    <h1> {props.monster.name}</h1>\r\n    <p>{props.monster.email}</p>\r\n  </div>\r\n);\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\nimport Card from \"../card/card.component\";\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card monster={monster} key={monster.id}></Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = (props) => (\r\n  <input\r\n    className=\"search\"\r\n    type=\"text\"\r\n    placeholder={props.placeholder}\r\n    onChange={props.handleChange}\r\n  />\r\n);\r\n","import \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport CardList from \"./components/card-list/card-list.component\";\r\nimport { SearchBox } from \"./components/search-box/search-box.component\";\r\nclass App extends Component {\r\n  constructor() {\r\n    super(); // help to call React.Component constructor()\r\n\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ monsters: users }));\r\n  }\r\n\r\n  render() {\r\n    const { monsters, searchField } = this.state;\r\n    const filteredMonsters = monsters.filter((monster) =>\r\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n    );\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Monster Rolodex</h1>\r\n\r\n        <SearchBox\r\n          placeholder=\"search monsters\"\r\n          handleChange={(e) =>\r\n            this.setState({ searchField: e.target.value }, () => {\r\n              console.log(this.state.searchField);\r\n            })\r\n          }\r\n        />\r\n        <CardList monsters={filteredMonsters}></CardList>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}